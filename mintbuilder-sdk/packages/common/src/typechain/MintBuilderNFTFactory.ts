/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "./common";
import type {
  MintBuilderNFT,
  MintBuilderNFTInterface,
} from "./MintBuilderNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadataURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "setMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200185938038062001859833981016040819052620000349162000145565b8282600062000044838262000261565b50600162000053828262000261565b5050600680546001600160a01b0319166001600160a01b039390931692909217909155506200032d915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000a857600080fd5b81516001600160401b0380821115620000c557620000c562000080565b604051601f8301601f19908116603f01168101908282118183101715620000f057620000f062000080565b816040528381526020925086838588010111156200010d57600080fd5b600091505b8382101562000131578582018301518183018401529082019062000112565b600093810190920192909252949350505050565b6000806000606084860312156200015b57600080fd5b83516001600160401b03808211156200017357600080fd5b620001818783880162000096565b945060208601519150808211156200019857600080fd5b50620001a78682870162000096565b604086015190935090506001600160a01b0381168114620001c757600080fd5b809150509250925092565b600181811c90821680620001e757607f821691505b6020821081036200020857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025c57600081815260208120601f850160051c81016020861015620002375750805b601f850160051c820191505b81811015620002585782815560010162000243565b5050505b505050565b81516001600160401b038111156200027d576200027d62000080565b62000295816200028e8454620001d2565b846200020e565b602080601f831160018114620002cd5760008415620002b45750858301515b600019600386901b1c1916600185901b17855562000258565b600085815260208120601f198616915b82811015620002fe57888601518255948401946001909101908401620002dd565b50858210156200031d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61151c806200033d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063593aa283116100a2578063a22cb46511610071578063a22cb46514610246578063b88d4fde14610259578063c87b56dd1461026c578063e985e9c51461027f578063fca3b5aa146102bb57600080fd5b8063593aa283146101f75780636352211e1461020a57806370a082311461021d57806395d89b411461023e57600080fd5b8063095ea7b3116100e9578063095ea7b31461019657806323b872dd146101ab5780633a789b8e146101be57806340c10f19146101d157806342842e0e146101e457600080fd5b806301ffc9a71461011b57806306fdde03146101435780630754617214610158578063081812fc14610183575b600080fd5b61012e610129366004610f2d565b6102ce565b60405190151581526020015b60405180910390f35b61014b610320565b60405161013a9190610f97565b60065461016b906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b61016b610191366004610faa565b6103b2565b6101a96101a4366004610fdf565b6103d9565b005b6101a96101b9366004611009565b6104f3565b61014b6101cc366004610faa565b610524565b6101a96101df366004610fdf565b6105be565b6101a96101f2366004611009565b6105f6565b6101a96102053660046110d1565b610611565b61016b610218366004610faa565b6106b1565b61023061022b36600461112c565b610711565b60405190815260200161013a565b61014b610797565b6101a9610254366004611147565b6107a6565b6101a9610267366004611183565b6107b1565b61014b61027a366004610faa565b6107e9565b61012e61028d3660046111ff565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101a96102c936600461112c565b61088b565b60006001600160e01b031982166380ac58cd60e01b14806102ff57506001600160e01b03198216635b5e139f60e01b145b8061031a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032f90611232565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90611232565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bd826108d7565b506000908152600460205260409020546001600160a01b031690565b60006103e4826106b1565b9050806001600160a01b0316836001600160a01b0316036104565760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104725750610472813361028d565b6104e45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161044d565b6104ee8383610939565b505050565b6104fd33826109a7565b6105195760405162461bcd60e51b815260040161044d9061126c565b6104ee838383610a26565b6007602052600090815260409020805461053d90611232565b80601f016020809104026020016040519081016040528092919081815260200182805461056990611232565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b505050505081565b6006546001600160a01b031633146105e85760405162461bcd60e51b815260040161044d906112b9565b6105f28282610b8a565b5050565b6104ee838383604051806020016040528060008152506107b1565b6006546001600160a01b0316331461063b5760405162461bcd60e51b815260040161044d906112b9565b6000828152600760205260409020805461065490611232565b1590506106995760405162461bcd60e51b815260206004820152601360248201527213509391950c4e8e9053149150511657d4d155606a1b604482015260640161044d565b60008281526007602052604090206104ee8282611335565b6000818152600260205260408120546001600160a01b03168061031a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161044d565b60006001600160a01b03821661077b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161044d565b506001600160a01b031660009081526003602052604090205490565b60606001805461032f90611232565b6105f2338383610d15565b6107bb33836109a7565b6107d75760405162461bcd60e51b815260040161044d9061126c565b6107e384848484610de3565b50505050565b600081815260076020526040902080546060919061080690611232565b80601f016020809104026020016040519081016040528092919081815260200182805461083290611232565b801561087f5780601f106108545761010080835404028352916020019161087f565b820191906000526020600020905b81548152906001019060200180831161086257829003601f168201915b50505050509050919050565b6006546001600160a01b031633146108b55760405162461bcd60e51b815260040161044d906112b9565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260409020546001600160a01b03166109365760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161044d565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061096e826106b1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109b3836106b1565b9050806001600160a01b0316846001600160a01b031614806109fa57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a1e5750836001600160a01b0316610a13846103b2565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a39826106b1565b6001600160a01b031614610a5f5760405162461bcd60e51b815260040161044d906113f5565b6001600160a01b038216610ac15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161044d565b826001600160a01b0316610ad4826106b1565b6001600160a01b031614610afa5760405162461bcd60e51b815260040161044d906113f5565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610be05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161044d565b6000818152600260205260409020546001600160a01b031615610c455760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161044d565b6000818152600260205260409020546001600160a01b031615610caa5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161044d565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b031603610d765760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161044d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610dee848484610a26565b610dfa84848484610e16565b6107e35760405162461bcd60e51b815260040161044d9061143a565b60006001600160a01b0384163b15610f0c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e5a90339089908890889060040161148c565b6020604051808303816000875af1925050508015610e95575060408051601f3d908101601f19168201909252610e92918101906114c9565b60015b610ef2573d808015610ec3576040519150601f19603f3d011682016040523d82523d6000602084013e610ec8565b606091505b508051600003610eea5760405162461bcd60e51b815260040161044d9061143a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a1e565b506001949350505050565b6001600160e01b03198116811461093657600080fd5b600060208284031215610f3f57600080fd5b8135610f4a81610f17565b9392505050565b6000815180845260005b81811015610f7757602081850181015186830182015201610f5b565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f4a6020830184610f51565b600060208284031215610fbc57600080fd5b5035919050565b80356001600160a01b0381168114610fda57600080fd5b919050565b60008060408385031215610ff257600080fd5b610ffb83610fc3565b946020939093013593505050565b60008060006060848603121561101e57600080fd5b61102784610fc3565b925061103560208501610fc3565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561107657611076611045565b604051601f8501601f19908116603f0116810190828211818310171561109e5761109e611045565b816040528093508581528686860111156110b757600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156110e457600080fd5b82359150602083013567ffffffffffffffff81111561110257600080fd5b8301601f8101851361111357600080fd5b6111228582356020840161105b565b9150509250929050565b60006020828403121561113e57600080fd5b610f4a82610fc3565b6000806040838503121561115a57600080fd5b61116383610fc3565b91506020830135801515811461117857600080fd5b809150509250929050565b6000806000806080858703121561119957600080fd5b6111a285610fc3565b93506111b060208601610fc3565b925060408501359150606085013567ffffffffffffffff8111156111d357600080fd5b8501601f810187136111e457600080fd5b6111f38782356020840161105b565b91505092959194509250565b6000806040838503121561121257600080fd5b61121b83610fc3565b915061122960208401610fc3565b90509250929050565b600181811c9082168061124657607f821691505b60208210810361126657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526014908201527313509391950c4e8e95539055551213d49256915160621b604082015260600190565b601f8211156104ee57600081815260208120601f850160051c8101602086101561130e5750805b601f850160051c820191505b8181101561132d5782815560010161131a565b505050505050565b815167ffffffffffffffff81111561134f5761134f611045565b6113638161135d8454611232565b846112e7565b602080601f83116001811461139857600084156113805750858301515b600019600386901b1c1916600185901b17855561132d565b600085815260208120601f198616915b828110156113c7578886015182559484019460019091019084016113a8565b50858210156113e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114bf90830184610f51565b9695505050505050565b6000602082840312156114db57600080fd5b8151610f4a81610f1756fea264697066735822122011c4421f0dd491fe88ce333e4a70262dbaf5f15de48537a1780551d8135ac98864736f6c63430008130033";

type MintBuilderNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintBuilderNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintBuilderNFTFactory extends ContractFactory {
  constructor(...args: MintBuilderNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _minter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MintBuilderNFT> {
    return super.deploy(
      name,
      symbol,
      _minter,
      overrides || {}
    ) as Promise<MintBuilderNFT>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _minter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, _minter, overrides || {});
  }
  override attach(address: string): MintBuilderNFT {
    return super.attach(address) as MintBuilderNFT;
  }
  override connect(signer: Signer): MintBuilderNFTFactory {
    return super.connect(signer) as MintBuilderNFTFactory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintBuilderNFTInterface {
    return new utils.Interface(_abi) as MintBuilderNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintBuilderNFT {
    return new Contract(address, _abi, signerOrProvider) as MintBuilderNFT;
  }
}
